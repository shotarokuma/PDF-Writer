name: Fuzz Test

on:
  push:
    branches: master

env:
  BUILD_TYPE: Release

jobs:
  fuzz-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential clang llvm git

      - name: Pull AFL++ Docker Image
        run: docker pull aflplusplus/aflplusplus:latest
    
      - name: Configure and Build with AFL++
        run: |
          docker run -v ${{ github.workspace }}:/src -w /src aflplusplus/aflplusplus:latest /bin/bash -c "
             mkdir -p build
            CC=afl-clang-fast CXX=afl-clang-fast++ cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}
            cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
          "

      - name: Build with CMake
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Run AFL++ Fuzzer with Workers
        env:
          AFL_I_DONT_CARE_ABOUT_MISSING_CRASHES: 1
        run: |
            docker run -v ${{ github.workspace }}:/src -w /src aflplusplus/aflplusplus:latest /bin/bash -c "
              afl-fuzz -M master -i ./PDFWriterTesting/Materials -o ./fuzz_outputs -t 5000 -- ./build/PDFWriterTesting/PDFWriterTesting ./PDFWriterTesting/Materials/ ./build/Testing/Output @@ &

              afl-fuzz -S worker1 -i ./PDFWriterTesting/Materials -o ./fuzz_outputs -t 5000 -- ./build/PDFWriterTesting/PDFWriterTesting ./PDFWriterTesting/Materials/ ./build/Testing/Output @@ &

              wait
            "
      
      - name: Upload Fuzzing Outputs as Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: fuzz-outputs
          path: ${{github.workspace}}/fuzz_outputs/